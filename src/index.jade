doctype html
html
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1, maximum-scale=1')
    title How we use modular Sass at inSided

    link(rel='stylesheet', type='text/css', href='build/build.css')

  body

    article
      section(class='logo-slide')
        img(src='images/insided_logo_800px.png')
        
      section
        h1 How we use modular Sass at inSided
        p <br>
        p Anne Ties van Vliet 
        p @anneties

      section
        h1 Summary
        ul
          li inSided current front-end setup
          li Why we wanted to change our current way of working
          li How we are setting up a modular structure
          li Small preview
          li Feedback is welcome

      section
        h2 inSided 
        h3 Software as a Service to maintain communities for corporate enterprises. 
        img(src='images/insided-clients.png')

      section
        img(src='images/t-mobile.png')

      section
        img(src='images/ns.png')

      section(class='aws-slide')
        h2 Running from the cloud
        div 
          img(src='images/aws-figure.jpg')

      section
        img(src='images/default.png') 

      section(class='css-fuckup')
        img(src='images/css-include.png' class='css-include')
        img(src='images/css-overwrite.png' class='css-overwrite')

      section
        //img(src='images/jackie-chan.jpeg' class='jackie-chan')
        ul
          li
          li
            img(src='http://media.giphy.com/media/5IKsrAbEcwrNS/giphy.gif')
      
      section
        h1 We can do a little better
        ul
          li Only one css stylesheet per customer rendered by Sass
          li Quicker implementation times
          li Make it easier to reuse styles for new projects
          li Create a pattern library for the designers to use
          li Coding conventions
          li Future proof (can we run 1000+ customers?)

      section
        h1 Time to refactor
        ul
          li BEM methodology
          li Rewrite templates and Sass and split up in modules
          li Create a white-label framework (non-opinionated)
          li Be able to compile Sass for every client by running variables through the same central codebase

      section
        h2 Render Sass from one central spot
        ul
          li Put Barebones Sass framework in it's own repository
          li Get versioned Barebones in your project with bower
          li Feed variables to framework with a settings Sass file, render css into your project
          li New core functionalities will automatically be styled when updating a project with bower
          li Customize modules/patterns by creating a custom sass file for them into your project

      section
        pre
          code.language-css.
            -Projects
             |-Client-name
               |-Templates
                -Assets
                -Sass
                 |-Barebones-sass (repo)
                  -Custom-sass
                  settings.scss            
                  output.scss
                  styles.scss
               GruntFile.js
               bower.json

      section
        h2 styles.scss
        pre
          code.language-css.
            //imports this project's settings file.
            @import '_settings.scss';
 
            //ALL barebones Sass-functionality 
            //without outputting any CSS.
            @import '../barebones-sass/_core-importer.scss';

            //imports all Sass files that will actually output CSS, 
            //based on the core functionality imported above.
            @import '_outputs.scss';

      section
        h2 _settings.scss
        pre
          code.language-css.
            // Which apps does the client use?
            $apps : ('forum');

            // brand color(s)
            $color-brand                    : #006;
            $color-contrast                 : #fc3;

            $site-width                     : 980px;
            $maincol-width                  : 100%;
            $sidebar-width                  : 240px;
            $gutter                         : 10px;

      section
        h2 _core-importer.scss
        pre
          code.language-css.
            @import 'global/grid';
            @import 'global/typography/fonts';
            @import 'global/typography/type_base';
            @import 'global/typography/headers';

            @import 'patterns/specific/spinner/spinner_base';
            @import 'patterns/specific/seperator/seperator_base';
            @import 'patterns/specific/tooltip/tooltip_base';
            @import 'patterns/patterns';

      section
        h2 output.scss
        pre
          code.language-css.
            @import '../barebones-sass/patterns/spinner/spinner_output';
            @import '../barebones-sass/patterns/links/links_output';
            @import '../barebones-sass/patterns/forms/form-textual_output';
            @import '../barebones-sass/patterns/forms/form-labels_output';
            @import '../barebones-sass/patterns/forms/forms_output';
            @import '../barebones-sass/patterns/avatar/avatar_output';
            @import '../barebones-sass/patterns/groups/flag_output';
            
            @import 'additions';

      section
        div
          img(src='images/barebones-sass.png')

      section
        h2 styles.scss
        pre
          code.language-css.
            //imports this project's settings file.
            @import '_settings.scss';
 
            //ALL barebones Sass-functionality 
            //without outputting any CSS.
            @import '../barebones-sass/_core-importer.scss';

            //imports all Sass files that will actually output CSS, 
            //based on the core functionality imported above.
            @import '_outputs.scss';

      section
        h2 Grunt build
        img(src='http://media.giphy.com/media/SKGo6OYe24EBG/giphy.gif')

      section
        h2 Let me show you a sass compile

      section
        h2 Didn't you talk about a pattern library?

      section
        ul
          li
          li 
            img(src='https://az681465.vo.msecnd.net/assets/2013/12/11/185bb4e792e5438c8e80962754b99680.gif')

      section
        h2 Discussion points
        ul
          li What would you do different?
          li How to keep track of custom code and our default

      section
        h2 Thank you for listening
        p Special thanks to <br /> 
        span Henk Jan Bouwmeester
        p <br>
        p Follow me on twitter <br> 
        span @anneties

    script(src='build/build.js')